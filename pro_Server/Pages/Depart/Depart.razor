@page "/depart"

<div class="container bg-white rounded border p-3">
    <div class="pl-3">
        <div class="row">
            <span style="font-size:18px; color:#8f8f8f;">Departments</span>
        </div>
        <div class="row pt-4">
            <a class="btn btn-primary" href="/depart/new" style="background-color:#6372C4"><i class="far fa-file"></i> New</a>
        </div>
    </div>
</div>

<div class="container bg-white border box-shadow p-3 rounded">
    @if (DepartVMs == null)
    {
        <p>Loading ...</p>
    }
    else if (DepartVMs.Count() == 0)
    {
        <p>No records to display.</p>
    }
    else
    {
        <SfGrid DataSource="@DepartVMs" AllowPaging="true" AllowSorting="true">
            <GridEvents RowSelected="RowSelectHandler" TValue="DepartViewModel"></GridEvents>
            <GridPageSettings PageSize="10" />
            <GridColumns>
                <GridColumn Field="Depart.Id" HeaderText="ID" Width="50" />
                <GridColumn Field="Depart.Name" HeaderText="Name" Width="200" />
            </GridColumns>
        </SfGrid>
    }
</div>


@code 
{
    [Inject] public IDepartService DepartService { get; set; }
    [Inject] NavigationManager NavigationManager { get; set; }

    public List<DepartViewModel> DepartVMs { get; set; }

    protected override async Task OnInitializedAsync()
    {
        DepartVMs = (await DepartService.GetDeparts()).OrderByDescending(x => x.Depart.Id).ToList();
    }

    public void RowSelectHandler(RowSelectEventArgs<DepartViewModel> args)
    {
        NavigationManager.NavigateTo($"depart/{args.Data.Depart.Id}");
    }
}


 <style>
            .e-grid .e-headercelldiv {
                background-color: #F2F3F4;
                font-size: 16px;
            }

            .e-grid .e-rowcell {
                font-size: 14px;
            }
 </style>
