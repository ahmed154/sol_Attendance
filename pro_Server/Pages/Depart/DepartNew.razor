@page "/depart/new"

<div class="container bg-white rounded border p-3">
    <div class="pl-3">
        <div class="row">
            <span style="font-size:18px; color:#8f8f8f;"><a href="/depart" style="color:#6372C4">Departments</a> /  New</span>
        </div>
        <div class="row pt-4">
            <button class="btn btn-primary" type="submit" @onclick=@(()=> Save()) style="background-color:#6372C4"><i class="far fa-save"></i> Save</button>
            <a class="btn border" href="/depart"><i class="fas fa-undo"></i> Cancel</a>
        </div>
    </div>
</div>

<div class="container bg-white border box-shadow p-3 rounded">
    <DepartForm DepartVM="DepartVM" ecb_Save="Create" Type="New" @ref="Form" />
</div>


@code
{
    [Inject] public IDepartService DepartService { get; set; }
    [Inject] public IJSRuntime JSRuntime { get; set; }
    [Inject] NavigationManager NavigationManager { get; set; }

    protected DepartForm Form;
    DepartViewModel DepartVM { get; set; } = new DepartViewModel();

    private async Task Save()
    {
        await Form.ParentSubmit();
    }
    private async Task Create()
    {
        DepartVM.Exception = null;
        DepartViewModel createdDepartViewModel = await DepartService.CreateDepart(DepartVM);

        if (string.IsNullOrEmpty(createdDepartViewModel.Exception))
        {
            await JSRuntime.Notfication($"Department {DepartVM.Depart.Name} has been created successfully!", IJSRuntimeExtensionMethods.SweetAlertMessageType.success, 3000);
            NavigationManager.NavigateTo($"/depart/{createdDepartViewModel.Depart.Id}");
        }
        else
        {
            await JSRuntime.Notfication(createdDepartViewModel.Exception, IJSRuntimeExtensionMethods.SweetAlertMessageType.error, 10000);
        }
    }
}


